// <auto-generated />
using System;
using InventoryDemo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryDemo.Infrastructure.Migrations
{
    [DbContext(typeof(InventoryDemoDbContext))]
    [Migration("20230620155140_create 3 new table Records Operator Machines ")]
    partial class create3newtableRecordsOperatorMachines
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryDemo.Core.Entities.Machines", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineId"), 1L, 1);

                    b.Property<string>("MachineDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MachineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("InventoryDemo.Core.Entities.Operators", b =>
                {
                    b.Property<int>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatorId"), 1L, 1);

                    b.Property<DateTime>("OperatorDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatorInfo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("OperatorId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("InventoryDemo.Core.Entities.Records", b =>
                {
                    b.Property<int>("POnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POnumber"), 1L, 1);

                    b.Property<int>("LOTnumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.HasKey("POnumber");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("MachinesOperators", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.HasKey("MachineId", "OperatorId");

                    b.HasIndex("OperatorId");

                    b.ToTable("MachinesOperators");
                });

            modelBuilder.Entity("MachinesRecords", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("RecordPOnumber")
                        .HasColumnType("int");

                    b.HasKey("MachineId", "RecordPOnumber");

                    b.HasIndex("RecordPOnumber");

                    b.ToTable("MachineUsingInRecord", (string)null);
                });

            modelBuilder.Entity("OperatorsRecords", b =>
                {
                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int>("RecordPOnumber")
                        .HasColumnType("int");

                    b.HasKey("OperatorId", "RecordPOnumber");

                    b.HasIndex("RecordPOnumber");

                    b.ToTable("OperatorWorkInRecord", (string)null);
                });

            modelBuilder.Entity("MachinesOperators", b =>
                {
                    b.HasOne("InventoryDemo.Core.Entities.Machines", null)
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryDemo.Core.Entities.Operators", null)
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MachinesRecords", b =>
                {
                    b.HasOne("InventoryDemo.Core.Entities.Machines", null)
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryDemo.Core.Entities.Records", null)
                        .WithMany()
                        .HasForeignKey("RecordPOnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OperatorsRecords", b =>
                {
                    b.HasOne("InventoryDemo.Core.Entities.Operators", null)
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryDemo.Core.Entities.Records", null)
                        .WithMany()
                        .HasForeignKey("RecordPOnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
